/**
 * Apideck
 * The Apideck OpenAPI Spec: SDK Optimized
 *
 * The version of the OpenAPI document: 9.9.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ActivitiesFilter, Activity, CompaniesFilter, CompaniesSort, Company, Contact, ContactsFilter, ContactsSort, CreateActivityResponse, CreateCompanyResponse, CreateContactResponse, CreateLeadResponse, CreateNoteResponse, CreateOpportunityResponse, CreatePipelineResponse, CreateUserResponse, DeleteActivityResponse, DeleteCompanyResponse, DeleteContactResponse, DeleteLeadResponse, DeleteNoteResponse, DeleteOpportunityResponse, DeletePipelineResponse, DeleteUserResponse, GetActivitiesResponse, GetActivityResponse, GetCompaniesResponse, GetCompanyResponse, GetContactResponse, GetContactsResponse, GetLeadResponse, GetLeadsResponse, GetNoteResponse, GetNotesResponse, GetOpportunitiesResponse, GetOpportunityResponse, GetPipelineResponse, GetPipelinesResponse, GetUserResponse, GetUsersResponse, Lead, LeadsFilter, LeadsSort, Note, OpportunitiesFilter, OpportunitiesSort, Opportunity, PassThroughQuery, Pipeline, UpdateActivityResponse, UpdateCompanyResponse, UpdateContactResponse, UpdateLeadResponse, UpdateNoteResponse, UpdateOpportunityResponse, UpdatePipelineResponse, UpdateUserResponse, User } from '../models';
import * as runtime from '../runtime';
export interface CrmApiActivitiesAddRequest {
    activity: Activity;
    raw?: boolean;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
}
export interface CrmApiActivitiesAllRequest {
    raw?: boolean;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    cursor?: string | null;
    limit?: number;
    filter?: ActivitiesFilter;
    passThrough?: PassThroughQuery;
    fields?: string | null;
}
export interface CrmApiActivitiesDeleteRequest {
    id: string;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
}
export interface CrmApiActivitiesOneRequest {
    id: string;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
    fields?: string | null;
}
export interface CrmApiActivitiesUpdateRequest {
    id: string;
    activity: Activity;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
}
export interface CrmApiCompaniesAddRequest {
    company: Company;
    raw?: boolean;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
}
export interface CrmApiCompaniesAllRequest {
    raw?: boolean;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    cursor?: string | null;
    limit?: number;
    filter?: CompaniesFilter;
    sort?: CompaniesSort;
    passThrough?: PassThroughQuery;
    fields?: string | null;
}
export interface CrmApiCompaniesDeleteRequest {
    id: string;
    raw?: boolean;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
}
export interface CrmApiCompaniesOneRequest {
    id: string;
    raw?: boolean;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    fields?: string | null;
}
export interface CrmApiCompaniesUpdateRequest {
    id: string;
    company: Company;
    raw?: boolean;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
}
export interface CrmApiContactsAddRequest {
    contact: Contact;
    raw?: boolean;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
}
export interface CrmApiContactsAllRequest {
    raw?: boolean;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    cursor?: string | null;
    limit?: number;
    filter?: ContactsFilter;
    sort?: ContactsSort;
    passThrough?: PassThroughQuery;
    fields?: string | null;
}
export interface CrmApiContactsDeleteRequest {
    id: string;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
}
export interface CrmApiContactsOneRequest {
    id: string;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
    fields?: string | null;
}
export interface CrmApiContactsUpdateRequest {
    id: string;
    contact: Contact;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
}
export interface CrmApiLeadsAddRequest {
    lead: Lead;
    raw?: boolean;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
}
export interface CrmApiLeadsAllRequest {
    raw?: boolean;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    cursor?: string | null;
    limit?: number;
    filter?: LeadsFilter;
    sort?: LeadsSort;
    passThrough?: PassThroughQuery;
    fields?: string | null;
}
export interface CrmApiLeadsDeleteRequest {
    id: string;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
}
export interface CrmApiLeadsOneRequest {
    id: string;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
    fields?: string | null;
}
export interface CrmApiLeadsUpdateRequest {
    id: string;
    lead: Lead;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
}
export interface CrmApiNotesAddRequest {
    note: Note;
    raw?: boolean;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
}
export interface CrmApiNotesAllRequest {
    raw?: boolean;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    cursor?: string | null;
    limit?: number;
    passThrough?: PassThroughQuery;
    fields?: string | null;
}
export interface CrmApiNotesDeleteRequest {
    id: string;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
}
export interface CrmApiNotesOneRequest {
    id: string;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
    fields?: string | null;
}
export interface CrmApiNotesUpdateRequest {
    id: string;
    note: Note;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
}
export interface CrmApiOpportunitiesAddRequest {
    opportunity: Opportunity;
    raw?: boolean;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
}
export interface CrmApiOpportunitiesAllRequest {
    raw?: boolean;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    cursor?: string | null;
    limit?: number;
    filter?: OpportunitiesFilter;
    sort?: OpportunitiesSort;
    passThrough?: PassThroughQuery;
    fields?: string | null;
}
export interface CrmApiOpportunitiesDeleteRequest {
    id: string;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
}
export interface CrmApiOpportunitiesOneRequest {
    id: string;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
    fields?: string | null;
}
export interface CrmApiOpportunitiesUpdateRequest {
    id: string;
    opportunity: Opportunity;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
}
export interface CrmApiPipelinesAddRequest {
    pipeline: Pipeline;
    raw?: boolean;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
}
export interface CrmApiPipelinesAllRequest {
    raw?: boolean;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    cursor?: string | null;
    limit?: number;
    passThrough?: PassThroughQuery;
    fields?: string | null;
}
export interface CrmApiPipelinesDeleteRequest {
    id: string;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
}
export interface CrmApiPipelinesOneRequest {
    id: string;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
    fields?: string | null;
}
export interface CrmApiPipelinesUpdateRequest {
    id: string;
    pipeline: Pipeline;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
}
export interface CrmApiUsersAddRequest {
    user: User;
    raw?: boolean;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
}
export interface CrmApiUsersAllRequest {
    raw?: boolean;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    cursor?: string | null;
    limit?: number;
    passThrough?: PassThroughQuery;
    fields?: string | null;
}
export interface CrmApiUsersDeleteRequest {
    id: string;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
}
export interface CrmApiUsersOneRequest {
    id: string;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
    fields?: string | null;
}
export interface CrmApiUsersUpdateRequest {
    id: string;
    user: User;
    consumerId?: string;
    appId?: string;
    serviceId?: string;
    raw?: boolean;
}
/**
 *
 */
export declare class CrmApi extends runtime.BaseAPI {
    /**
     * Create activity
     * Create activity
     */
    activitiesAddRaw(requestParameters: CrmApiActivitiesAddRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<CreateActivityResponse>>;
    /**
     * Create activity
     * Create activity
     */
    activitiesAdd(requestParameters: CrmApiActivitiesAddRequest, initOverrides?: RequestInit): Promise<CreateActivityResponse>;
    /**
     * List activities
     * List activities
     */
    activitiesAllRaw(requestParameters: CrmApiActivitiesAllRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetActivitiesResponse>>;
    /**
     * List activities
     * List activities
     */
    activitiesAll(requestParameters?: CrmApiActivitiesAllRequest, initOverrides?: RequestInit): Promise<GetActivitiesResponse>;
    /**
     * Delete activity
     * Delete activity
     */
    activitiesDeleteRaw(requestParameters: CrmApiActivitiesDeleteRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DeleteActivityResponse>>;
    /**
     * Delete activity
     * Delete activity
     */
    activitiesDelete(requestParameters: CrmApiActivitiesDeleteRequest, initOverrides?: RequestInit): Promise<DeleteActivityResponse>;
    /**
     * Get activity
     * Get activity
     */
    activitiesOneRaw(requestParameters: CrmApiActivitiesOneRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetActivityResponse>>;
    /**
     * Get activity
     * Get activity
     */
    activitiesOne(requestParameters: CrmApiActivitiesOneRequest, initOverrides?: RequestInit): Promise<GetActivityResponse>;
    /**
     * Update activity
     * Update activity
     */
    activitiesUpdateRaw(requestParameters: CrmApiActivitiesUpdateRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<UpdateActivityResponse>>;
    /**
     * Update activity
     * Update activity
     */
    activitiesUpdate(requestParameters: CrmApiActivitiesUpdateRequest, initOverrides?: RequestInit): Promise<UpdateActivityResponse>;
    /**
     * Create company
     * Create company
     */
    companiesAddRaw(requestParameters: CrmApiCompaniesAddRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<CreateCompanyResponse>>;
    /**
     * Create company
     * Create company
     */
    companiesAdd(requestParameters: CrmApiCompaniesAddRequest, initOverrides?: RequestInit): Promise<CreateCompanyResponse>;
    /**
     * List companies
     * List companies
     */
    companiesAllRaw(requestParameters: CrmApiCompaniesAllRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetCompaniesResponse>>;
    /**
     * List companies
     * List companies
     */
    companiesAll(requestParameters?: CrmApiCompaniesAllRequest, initOverrides?: RequestInit): Promise<GetCompaniesResponse>;
    /**
     * Delete company
     * Delete company
     */
    companiesDeleteRaw(requestParameters: CrmApiCompaniesDeleteRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DeleteCompanyResponse>>;
    /**
     * Delete company
     * Delete company
     */
    companiesDelete(requestParameters: CrmApiCompaniesDeleteRequest, initOverrides?: RequestInit): Promise<DeleteCompanyResponse>;
    /**
     * Get company
     * Get company
     */
    companiesOneRaw(requestParameters: CrmApiCompaniesOneRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetCompanyResponse>>;
    /**
     * Get company
     * Get company
     */
    companiesOne(requestParameters: CrmApiCompaniesOneRequest, initOverrides?: RequestInit): Promise<GetCompanyResponse>;
    /**
     * Update company
     * Update company
     */
    companiesUpdateRaw(requestParameters: CrmApiCompaniesUpdateRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<UpdateCompanyResponse>>;
    /**
     * Update company
     * Update company
     */
    companiesUpdate(requestParameters: CrmApiCompaniesUpdateRequest, initOverrides?: RequestInit): Promise<UpdateCompanyResponse>;
    /**
     * Create contact
     * Create contact
     */
    contactsAddRaw(requestParameters: CrmApiContactsAddRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<CreateContactResponse>>;
    /**
     * Create contact
     * Create contact
     */
    contactsAdd(requestParameters: CrmApiContactsAddRequest, initOverrides?: RequestInit): Promise<CreateContactResponse>;
    /**
     * List contacts
     * List contacts
     */
    contactsAllRaw(requestParameters: CrmApiContactsAllRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetContactsResponse>>;
    /**
     * List contacts
     * List contacts
     */
    contactsAll(requestParameters?: CrmApiContactsAllRequest, initOverrides?: RequestInit): Promise<GetContactsResponse>;
    /**
     * Delete contact
     * Delete contact
     */
    contactsDeleteRaw(requestParameters: CrmApiContactsDeleteRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DeleteContactResponse>>;
    /**
     * Delete contact
     * Delete contact
     */
    contactsDelete(requestParameters: CrmApiContactsDeleteRequest, initOverrides?: RequestInit): Promise<DeleteContactResponse>;
    /**
     * Get contact
     * Get contact
     */
    contactsOneRaw(requestParameters: CrmApiContactsOneRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetContactResponse>>;
    /**
     * Get contact
     * Get contact
     */
    contactsOne(requestParameters: CrmApiContactsOneRequest, initOverrides?: RequestInit): Promise<GetContactResponse>;
    /**
     * Update contact
     * Update contact
     */
    contactsUpdateRaw(requestParameters: CrmApiContactsUpdateRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<UpdateContactResponse>>;
    /**
     * Update contact
     * Update contact
     */
    contactsUpdate(requestParameters: CrmApiContactsUpdateRequest, initOverrides?: RequestInit): Promise<UpdateContactResponse>;
    /**
     * Create lead
     * Create lead
     */
    leadsAddRaw(requestParameters: CrmApiLeadsAddRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<CreateLeadResponse>>;
    /**
     * Create lead
     * Create lead
     */
    leadsAdd(requestParameters: CrmApiLeadsAddRequest, initOverrides?: RequestInit): Promise<CreateLeadResponse>;
    /**
     * List leads
     * List leads
     */
    leadsAllRaw(requestParameters: CrmApiLeadsAllRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetLeadsResponse>>;
    /**
     * List leads
     * List leads
     */
    leadsAll(requestParameters?: CrmApiLeadsAllRequest, initOverrides?: RequestInit): Promise<GetLeadsResponse>;
    /**
     * Delete lead
     * Delete lead
     */
    leadsDeleteRaw(requestParameters: CrmApiLeadsDeleteRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DeleteLeadResponse>>;
    /**
     * Delete lead
     * Delete lead
     */
    leadsDelete(requestParameters: CrmApiLeadsDeleteRequest, initOverrides?: RequestInit): Promise<DeleteLeadResponse>;
    /**
     * Get lead
     * Get lead
     */
    leadsOneRaw(requestParameters: CrmApiLeadsOneRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetLeadResponse>>;
    /**
     * Get lead
     * Get lead
     */
    leadsOne(requestParameters: CrmApiLeadsOneRequest, initOverrides?: RequestInit): Promise<GetLeadResponse>;
    /**
     * Update lead
     * Update lead
     */
    leadsUpdateRaw(requestParameters: CrmApiLeadsUpdateRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<UpdateLeadResponse>>;
    /**
     * Update lead
     * Update lead
     */
    leadsUpdate(requestParameters: CrmApiLeadsUpdateRequest, initOverrides?: RequestInit): Promise<UpdateLeadResponse>;
    /**
     * Create note
     * Create note
     */
    notesAddRaw(requestParameters: CrmApiNotesAddRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<CreateNoteResponse>>;
    /**
     * Create note
     * Create note
     */
    notesAdd(requestParameters: CrmApiNotesAddRequest, initOverrides?: RequestInit): Promise<CreateNoteResponse>;
    /**
     * List notes
     * List notes
     */
    notesAllRaw(requestParameters: CrmApiNotesAllRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetNotesResponse>>;
    /**
     * List notes
     * List notes
     */
    notesAll(requestParameters?: CrmApiNotesAllRequest, initOverrides?: RequestInit): Promise<GetNotesResponse>;
    /**
     * Delete note
     * Delete note
     */
    notesDeleteRaw(requestParameters: CrmApiNotesDeleteRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DeleteNoteResponse>>;
    /**
     * Delete note
     * Delete note
     */
    notesDelete(requestParameters: CrmApiNotesDeleteRequest, initOverrides?: RequestInit): Promise<DeleteNoteResponse>;
    /**
     * Get note
     * Get note
     */
    notesOneRaw(requestParameters: CrmApiNotesOneRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetNoteResponse>>;
    /**
     * Get note
     * Get note
     */
    notesOne(requestParameters: CrmApiNotesOneRequest, initOverrides?: RequestInit): Promise<GetNoteResponse>;
    /**
     * Update note
     * Update note
     */
    notesUpdateRaw(requestParameters: CrmApiNotesUpdateRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<UpdateNoteResponse>>;
    /**
     * Update note
     * Update note
     */
    notesUpdate(requestParameters: CrmApiNotesUpdateRequest, initOverrides?: RequestInit): Promise<UpdateNoteResponse>;
    /**
     * Create opportunity
     * Create opportunity
     */
    opportunitiesAddRaw(requestParameters: CrmApiOpportunitiesAddRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<CreateOpportunityResponse>>;
    /**
     * Create opportunity
     * Create opportunity
     */
    opportunitiesAdd(requestParameters: CrmApiOpportunitiesAddRequest, initOverrides?: RequestInit): Promise<CreateOpportunityResponse>;
    /**
     * List opportunities
     * List opportunities
     */
    opportunitiesAllRaw(requestParameters: CrmApiOpportunitiesAllRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetOpportunitiesResponse>>;
    /**
     * List opportunities
     * List opportunities
     */
    opportunitiesAll(requestParameters?: CrmApiOpportunitiesAllRequest, initOverrides?: RequestInit): Promise<GetOpportunitiesResponse>;
    /**
     * Delete opportunity
     * Delete opportunity
     */
    opportunitiesDeleteRaw(requestParameters: CrmApiOpportunitiesDeleteRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DeleteOpportunityResponse>>;
    /**
     * Delete opportunity
     * Delete opportunity
     */
    opportunitiesDelete(requestParameters: CrmApiOpportunitiesDeleteRequest, initOverrides?: RequestInit): Promise<DeleteOpportunityResponse>;
    /**
     * Get opportunity
     * Get opportunity
     */
    opportunitiesOneRaw(requestParameters: CrmApiOpportunitiesOneRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetOpportunityResponse>>;
    /**
     * Get opportunity
     * Get opportunity
     */
    opportunitiesOne(requestParameters: CrmApiOpportunitiesOneRequest, initOverrides?: RequestInit): Promise<GetOpportunityResponse>;
    /**
     * Update opportunity
     * Update opportunity
     */
    opportunitiesUpdateRaw(requestParameters: CrmApiOpportunitiesUpdateRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<UpdateOpportunityResponse>>;
    /**
     * Update opportunity
     * Update opportunity
     */
    opportunitiesUpdate(requestParameters: CrmApiOpportunitiesUpdateRequest, initOverrides?: RequestInit): Promise<UpdateOpportunityResponse>;
    /**
     * Create pipeline
     * Create pipeline
     */
    pipelinesAddRaw(requestParameters: CrmApiPipelinesAddRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<CreatePipelineResponse>>;
    /**
     * Create pipeline
     * Create pipeline
     */
    pipelinesAdd(requestParameters: CrmApiPipelinesAddRequest, initOverrides?: RequestInit): Promise<CreatePipelineResponse>;
    /**
     * List pipelines
     * List pipelines
     */
    pipelinesAllRaw(requestParameters: CrmApiPipelinesAllRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetPipelinesResponse>>;
    /**
     * List pipelines
     * List pipelines
     */
    pipelinesAll(requestParameters?: CrmApiPipelinesAllRequest, initOverrides?: RequestInit): Promise<GetPipelinesResponse>;
    /**
     * Delete pipeline
     * Delete pipeline
     */
    pipelinesDeleteRaw(requestParameters: CrmApiPipelinesDeleteRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DeletePipelineResponse>>;
    /**
     * Delete pipeline
     * Delete pipeline
     */
    pipelinesDelete(requestParameters: CrmApiPipelinesDeleteRequest, initOverrides?: RequestInit): Promise<DeletePipelineResponse>;
    /**
     * Get pipeline
     * Get pipeline
     */
    pipelinesOneRaw(requestParameters: CrmApiPipelinesOneRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetPipelineResponse>>;
    /**
     * Get pipeline
     * Get pipeline
     */
    pipelinesOne(requestParameters: CrmApiPipelinesOneRequest, initOverrides?: RequestInit): Promise<GetPipelineResponse>;
    /**
     * Update pipeline
     * Update pipeline
     */
    pipelinesUpdateRaw(requestParameters: CrmApiPipelinesUpdateRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<UpdatePipelineResponse>>;
    /**
     * Update pipeline
     * Update pipeline
     */
    pipelinesUpdate(requestParameters: CrmApiPipelinesUpdateRequest, initOverrides?: RequestInit): Promise<UpdatePipelineResponse>;
    /**
     * Create user
     * Create user
     */
    usersAddRaw(requestParameters: CrmApiUsersAddRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<CreateUserResponse>>;
    /**
     * Create user
     * Create user
     */
    usersAdd(requestParameters: CrmApiUsersAddRequest, initOverrides?: RequestInit): Promise<CreateUserResponse>;
    /**
     * List users
     * List users
     */
    usersAllRaw(requestParameters: CrmApiUsersAllRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetUsersResponse>>;
    /**
     * List users
     * List users
     */
    usersAll(requestParameters?: CrmApiUsersAllRequest, initOverrides?: RequestInit): Promise<GetUsersResponse>;
    /**
     * Delete user
     * Delete user
     */
    usersDeleteRaw(requestParameters: CrmApiUsersDeleteRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DeleteUserResponse>>;
    /**
     * Delete user
     * Delete user
     */
    usersDelete(requestParameters: CrmApiUsersDeleteRequest, initOverrides?: RequestInit): Promise<DeleteUserResponse>;
    /**
     * Get user
     * Get user
     */
    usersOneRaw(requestParameters: CrmApiUsersOneRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetUserResponse>>;
    /**
     * Get user
     * Get user
     */
    usersOne(requestParameters: CrmApiUsersOneRequest, initOverrides?: RequestInit): Promise<GetUserResponse>;
    /**
     * Update user
     * Update user
     */
    usersUpdateRaw(requestParameters: CrmApiUsersUpdateRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<UpdateUserResponse>>;
    /**
     * Update user
     * Update user
     */
    usersUpdate(requestParameters: CrmApiUsersUpdateRequest, initOverrides?: RequestInit): Promise<UpdateUserResponse>;
}
