/**
 * Apideck
 * The Apideck OpenAPI Spec: SDK Optimized
 *
 * The version of the OpenAPI document: 9.9.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { CreateWebhookRequest, CreateWebhookResponse, DeleteWebhookResponse, GetWebhookEventLogsResponse, GetWebhookResponse, GetWebhooksResponse, UpdateWebhookRequest, UpdateWebhookResponse, WebhookEventLogsFilter } from '../models';
import * as runtime from '../runtime';
export interface WebhookApiEventLogsAllRequest {
    appId?: string;
    cursor?: string | null;
    limit?: number;
    filter?: WebhookEventLogsFilter;
}
export interface WebhookApiWebhooksAddRequest {
    webhook: CreateWebhookRequest;
    appId?: string;
}
export interface WebhookApiWebhooksAllRequest {
    appId?: string;
    cursor?: string | null;
    limit?: number;
}
export interface WebhookApiWebhooksDeleteRequest {
    id: string;
    appId?: string;
}
export interface WebhookApiWebhooksOneRequest {
    id: string;
    appId?: string;
}
export interface WebhookApiWebhooksUpdateRequest {
    id: string;
    webhook: UpdateWebhookRequest;
    appId?: string;
}
/**
 *
 */
export declare class WebhookApi extends runtime.BaseAPI {
    /**
     * List event logs
     * List event logs
     */
    eventLogsAllRaw(requestParameters: WebhookApiEventLogsAllRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetWebhookEventLogsResponse>>;
    /**
     * List event logs
     * List event logs
     */
    eventLogsAll(requestParameters?: WebhookApiEventLogsAllRequest, initOverrides?: RequestInit): Promise<GetWebhookEventLogsResponse>;
    /**
     * Create a webhook subscription to receive events
     * Create webhook subscription
     */
    webhooksAddRaw(requestParameters: WebhookApiWebhooksAddRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<CreateWebhookResponse>>;
    /**
     * Create a webhook subscription to receive events
     * Create webhook subscription
     */
    webhooksAdd(requestParameters: WebhookApiWebhooksAddRequest, initOverrides?: RequestInit): Promise<CreateWebhookResponse>;
    /**
     * List all webhook subscriptions
     * List webhook subscriptions
     */
    webhooksAllRaw(requestParameters: WebhookApiWebhooksAllRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetWebhooksResponse>>;
    /**
     * List all webhook subscriptions
     * List webhook subscriptions
     */
    webhooksAll(requestParameters?: WebhookApiWebhooksAllRequest, initOverrides?: RequestInit): Promise<GetWebhooksResponse>;
    /**
     * Delete a webhook subscription
     * Delete webhook subscription
     */
    webhooksDeleteRaw(requestParameters: WebhookApiWebhooksDeleteRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DeleteWebhookResponse>>;
    /**
     * Delete a webhook subscription
     * Delete webhook subscription
     */
    webhooksDelete(requestParameters: WebhookApiWebhooksDeleteRequest, initOverrides?: RequestInit): Promise<DeleteWebhookResponse>;
    /**
     * Get the webhook subscription details
     * Get webhook subscription
     */
    webhooksOneRaw(requestParameters: WebhookApiWebhooksOneRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<GetWebhookResponse>>;
    /**
     * Get the webhook subscription details
     * Get webhook subscription
     */
    webhooksOne(requestParameters: WebhookApiWebhooksOneRequest, initOverrides?: RequestInit): Promise<GetWebhookResponse>;
    /**
     * Update a webhook subscription
     * Update webhook subscription
     */
    webhooksUpdateRaw(requestParameters: WebhookApiWebhooksUpdateRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<UpdateWebhookResponse>>;
    /**
     * Update a webhook subscription
     * Update webhook subscription
     */
    webhooksUpdate(requestParameters: WebhookApiWebhooksUpdateRequest, initOverrides?: RequestInit): Promise<UpdateWebhookResponse>;
}
