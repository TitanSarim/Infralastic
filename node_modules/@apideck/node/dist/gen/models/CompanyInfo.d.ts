/**
 * Apideck
 * The Apideck OpenAPI Spec: SDK Optimized
 *
 * The version of the OpenAPI document: 9.9.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Address } from './Address';
import { Currency } from './Currency';
import { Email } from './Email';
import { PhoneNumber } from './PhoneNumber';
import { TaxRate } from './TaxRate';
/**
 *
 * @export
 * @interface CompanyInfo
 */
export interface CompanyInfo {
    /**
     * A unique identifier for an object.
     * @type {string}
     * @memberof CompanyInfo
     */
    readonly id?: string;
    /**
     * The name of the company.
     * @type {string}
     * @memberof CompanyInfo
     */
    company_name?: string | null;
    /**
     * Based on the status some functionality is enabled or disabled.
     * @type {string}
     * @memberof CompanyInfo
     */
    status?: CompanyInfoStatus;
    /**
     * The legal name of the company
     * @type {string}
     * @memberof CompanyInfo
     */
    legal_name?: string;
    /**
     * country code according to ISO 3166-1 alpha-2.
     * @type {string}
     * @memberof CompanyInfo
     */
    country?: string | null;
    /**
     *
     * @type {string}
     * @memberof CompanyInfo
     */
    sales_tax_number?: string | null;
    /**
     * Whether sales tax is calculated automatically for the company
     * @type {boolean}
     * @memberof CompanyInfo
     */
    automated_sales_tax?: boolean;
    /**
     * Whether sales tax is enabled for the company
     * @type {boolean}
     * @memberof CompanyInfo
     */
    sales_tax_enabled?: boolean;
    /**
     *
     * @type {TaxRate}
     * @memberof CompanyInfo
     */
    default_sales_tax?: TaxRate;
    /**
     *
     * @type {Currency}
     * @memberof CompanyInfo
     */
    currency?: Currency | null;
    /**
     * language code according to ISO 639-1. For the United States - EN
     * @type {string}
     * @memberof CompanyInfo
     */
    language?: string | null;
    /**
     * The start month of fiscal year.
     * @type {string}
     * @memberof CompanyInfo
     */
    fiscal_year_start_month?: CompanyInfoFiscalYearStartMonth;
    /**
     * Date when company file was created
     * @type {Date}
     * @memberof CompanyInfo
     */
    company_start_date?: Date;
    /**
     *
     * @type {Array<Address>}
     * @memberof CompanyInfo
     */
    addresses?: Array<Address>;
    /**
     *
     * @type {Array<PhoneNumber>}
     * @memberof CompanyInfo
     */
    phone_numbers?: Array<PhoneNumber>;
    /**
     *
     * @type {Array<Email>}
     * @memberof CompanyInfo
     */
    emails?: Array<Email>;
    /**
     * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
     * @type {string}
     * @memberof CompanyInfo
     */
    row_version?: string | null;
    /**
     * The user who last updated the object.
     * @type {string}
     * @memberof CompanyInfo
     */
    readonly updated_by?: string | null;
    /**
     * The user who created the object.
     * @type {string}
     * @memberof CompanyInfo
     */
    readonly created_by?: string | null;
    /**
     * The date and time when the object was last updated.
     * @type {Date}
     * @memberof CompanyInfo
     */
    readonly updated_at?: Date | null;
    /**
     * The date and time when the object was created.
     * @type {Date}
     * @memberof CompanyInfo
     */
    readonly created_at?: Date | null;
}
/**
 * @export
 * @enum {string}
 */
export declare enum CompanyInfoStatus {
    active = "active",
    inactive = "inactive"
}
/**
 * @export
 * @enum {string}
 */
export declare enum CompanyInfoFiscalYearStartMonth {
    January = "January",
    February = "February",
    March = "March",
    April = "April",
    May = "May",
    June = "June",
    July = "July",
    August = "August",
    September = "September",
    October = "October",
    November = "November",
    December = "December"
}
export declare function CompanyInfoFromJSON(json: any): CompanyInfo;
export declare function CompanyInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompanyInfo;
export declare function CompanyInfoToJSON(value?: CompanyInfo | null): any;
