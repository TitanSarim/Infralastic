/**
 * Apideck
 * The Apideck OpenAPI Spec: SDK Optimized
 *
 * The version of the OpenAPI document: 9.9.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Currency } from './Currency';
import { LinkedCustomer } from './LinkedCustomer';
import { LinkedLedgerAccount } from './LinkedLedgerAccount';
import { LinkedSupplier } from './LinkedSupplier';
import { PaymentAllocations } from './PaymentAllocations';
/**
 *
 * @export
 * @interface Payment
 */
export interface Payment {
    /**
     * Unique identifier representing the entity
     * @type {string}
     * @memberof Payment
     */
    readonly id: string;
    /**
     * Amount of payment
     * @type {number}
     * @memberof Payment
     */
    total_amount: number;
    /**
     * Date transaction was entered - YYYY:MM::DDThh:mm:ss.sTZD
     * @type {Date}
     * @memberof Payment
     */
    transaction_date: Date;
    /**
     * The third-party API ID of original entity
     * @type {string}
     * @memberof Payment
     */
    readonly downstream_id?: string | null;
    /**
     *
     * @type {Currency}
     * @memberof Payment
     */
    currency?: Currency | null;
    /**
     * Currency Exchange Rate at the time entity was recorded/generated.
     * @type {number}
     * @memberof Payment
     */
    currency_rate?: number | null;
    /**
     * Optional payment reference message ie: Debit remittance detail.
     * @type {string}
     * @memberof Payment
     */
    reference?: string | null;
    /**
     * Payment method name
     * @type {string}
     * @memberof Payment
     */
    payment_method?: string | null;
    /**
     * Optional reference message returned by payment method on processing
     * @type {string}
     * @memberof Payment
     */
    payment_method_reference?: string | null;
    /**
     * Unique identifier for the payment method.
     * @type {string}
     * @memberof Payment
     */
    payment_method_id?: string | null;
    /**
     * Type of accounts receivable account.
     * @type {string}
     * @memberof Payment
     */
    accounts_receivable_account_type?: string | null;
    /**
     * Unique identifier for the account to allocate payment to.
     * @type {string}
     * @memberof Payment
     */
    accounts_receivable_account_id?: string | null;
    /**
     *
     * @type {LinkedLedgerAccount}
     * @memberof Payment
     */
    account?: LinkedLedgerAccount | null;
    /**
     *
     * @type {LinkedCustomer}
     * @memberof Payment
     */
    customer?: LinkedCustomer | null;
    /**
     *
     * @type {LinkedSupplier}
     * @memberof Payment
     */
    supplier?: LinkedSupplier | null;
    /**
     * Payment has been reconciled
     * @type {boolean}
     * @memberof Payment
     */
    reconciled?: boolean;
    /**
     * Status of payment
     * @type {string}
     * @memberof Payment
     */
    status?: PaymentStatus;
    /**
     * Type of payment
     * @type {string}
     * @memberof Payment
     */
    type?: PaymentType;
    /**
     *
     * @type {Array<PaymentAllocations>}
     * @memberof Payment
     */
    allocations?: Array<PaymentAllocations>;
    /**
     * Optional note to be associated with the payment.
     * @type {string}
     * @memberof Payment
     */
    note?: string | null;
    /**
     * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
     * @type {string}
     * @memberof Payment
     */
    row_version?: string | null;
    /**
     * Payment id to be displayed.
     * @type {string}
     * @memberof Payment
     */
    display_id?: string | null;
    /**
     * The user who last updated the object.
     * @type {string}
     * @memberof Payment
     */
    readonly updated_by?: string | null;
    /**
     * The user who created the object.
     * @type {string}
     * @memberof Payment
     */
    readonly created_by?: string | null;
    /**
     * The date and time when the object was created.
     * @type {Date}
     * @memberof Payment
     */
    readonly created_at?: Date | null;
    /**
     * The date and time when the object was last updated.
     * @type {Date}
     * @memberof Payment
     */
    readonly updated_at?: Date | null;
}
/**
 * @export
 * @enum {string}
 */
export declare enum PaymentStatus {
    authorised = "authorised",
    paid = "paid",
    voided = "voided",
    deleted = "deleted"
}
/**
 * @export
 * @enum {string}
 */
export declare enum PaymentType {
    receivable = "accounts_receivable",
    payable = "accounts_payable",
    receivable_credit = "accounts_receivable_credit",
    payable_credit = "accounts_payable_credit",
    receivable_overpayment = "accounts_receivable_overpayment",
    payable_overpayment = "accounts_payable_overpayment",
    receivable_prepayment = "accounts_receivable_prepayment",
    payable_prepayment = "accounts_payable_prepayment"
}
export declare function PaymentFromJSON(json: any): Payment;
export declare function PaymentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Payment;
export declare function PaymentToJSON(value?: Payment | null): any;
